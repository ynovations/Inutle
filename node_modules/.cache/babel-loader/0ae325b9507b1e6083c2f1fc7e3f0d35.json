{"ast":null,"code":"var _jsxFileName = \"D:\\\\YNOVATIONS\\\\Projects\\\\Wordle Clone\\\\INUTLE\\\\src\\\\components\\\\keyboard\\\\Key.tsx\";\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Key = _ref => {\n  let {\n    children,\n    status,\n    width = 40,\n    value,\n    onClick\n  } = _ref;\n  const classes = classnames('flex items-center justify-center rounded mx-0.5 text-xs font-bold cursor-pointer select-none dark:text-white', {\n    'bg-slate-200 dark:bg-slate-600 hover:bg-slate-300 active:bg-slate-400': !status,\n    'bg-slate-400 text-white': status === 'absent',\n    'bg-blue-500 hover:bg-blue-600 active:bg-blue-700 text-white': status === 'correct',\n    'bg-orange-500 hover:bg-orange-600 active:bg-orange-700 dark:bg-orange-700 text-white': status === 'present'\n  });\n\n  const handleClick = event => {\n    onClick(value);\n    event.currentTarget.blur();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      width: `${width}px`,\n      height: '58px'\n    },\n    className: classes,\n    onClick: handleClick,\n    children: children || value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = Key;\n\nvar _c;\n\n$RefreshReg$(_c, \"Key\");","map":{"version":3,"sources":["D:/YNOVATIONS/Projects/Wordle Clone/INUTLE/src/components/keyboard/Key.tsx"],"names":["classnames","Key","children","status","width","value","onClick","classes","handleClick","event","currentTarget","blur","height"],"mappings":";AACA,OAAOA,UAAP,MAAuB,YAAvB;;AAYA,OAAO,MAAMC,GAAG,GAAG,QAMN;AAAA,MANO;AAClBC,IAAAA,QADkB;AAElBC,IAAAA,MAFkB;AAGlBC,IAAAA,KAAK,GAAG,EAHU;AAIlBC,IAAAA,KAJkB;AAKlBC,IAAAA;AALkB,GAMP;AACX,QAAMC,OAAO,GAAGP,UAAU,CACxB,8GADwB,EAExB;AACE,6EACE,CAACG,MAFL;AAGE,+BAA2BA,MAAM,KAAK,QAHxC;AAIE,mEACEA,MAAM,KAAK,SALf;AAME,4FACEA,MAAM,KAAK;AAPf,GAFwB,CAA1B;;AAaA,QAAMK,WAAuD,GAAIC,KAAD,IAAW;AACzEH,IAAAA,OAAO,CAACD,KAAD,CAAP;AACAI,IAAAA,KAAK,CAACC,aAAN,CAAoBC,IAApB;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,KAAK,EAAE;AAAEP,MAAAA,KAAK,EAAG,GAAEA,KAAM,IAAlB;AAAuBQ,MAAAA,MAAM,EAAE;AAA/B,KADT;AAEE,IAAA,SAAS,EAAEL,OAFb;AAGE,IAAA,OAAO,EAAEC,WAHX;AAAA,cAKGN,QAAQ,IAAIG;AALf;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlCM;KAAMJ,G","sourcesContent":["import { ReactNode } from 'react'\nimport classnames from 'classnames'\nimport { KeyValue } from '../../lib/keyboard'\nimport { CharStatus } from '../../lib/statuses'\n\ntype Props = {\n  children?: ReactNode\n  value: KeyValue\n  width?: number\n  status?: CharStatus\n  onClick: (value: KeyValue) => void\n}\n\nexport const Key = ({\n  children,\n  status,\n  width = 40,\n  value,\n  onClick,\n}: Props) => {\n  const classes = classnames(\n    'flex items-center justify-center rounded mx-0.5 text-xs font-bold cursor-pointer select-none dark:text-white',\n    {\n      'bg-slate-200 dark:bg-slate-600 hover:bg-slate-300 active:bg-slate-400':\n        !status,\n      'bg-slate-400 text-white': status === 'absent',\n      'bg-blue-500 hover:bg-blue-600 active:bg-blue-700 text-white':\n        status === 'correct',\n      'bg-orange-500 hover:bg-orange-600 active:bg-orange-700 dark:bg-orange-700 text-white':\n        status === 'present',\n    }\n  )\n\n  const handleClick: React.MouseEventHandler<HTMLButtonElement> = (event) => {\n    onClick(value)\n    event.currentTarget.blur()\n  }\n\n  return (\n    <button\n      style={{ width: `${width}px`, height: '58px' }}\n      className={classes}\n      onClick={handleClick}\n    >\n      {children || value}\n    </button>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}